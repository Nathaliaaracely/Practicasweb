# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Usuario {
  id: ID!
  nombre: String!
  apellido: String!
  correo: String!
  telefono: String!
  tipo: String!
}

type Actividade {
  id: ID!
  nombre: String!
  tipo: String!
  descripcion: String!
  fechaInicio: DateTime!
  fechaFin: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Entrada {
  id: ID!
  usuarioId: String!
  tipo_entradaid: String!
  eventoId: String!
  pago: Float!
  fecha_adquirida: DateTime!
}

type Evento {
  id: ID!
  nombre: String!
  descripcion: String!
  fechainicio: DateTime!
  fechafin: DateTime!
}

type Pago {
  id: ID!
  usuarioId: String!
  metodoPago: String!
  fechaPago: DateTime!
  monto: Int!
  estado: String!
}

type RegistroActividade {
  id: ID!
  usuarioId: String!
  actividadId: String!
}

type Query {
  usuarios: [Usuario!]!
  usuario(id: ID!): Usuario!
  actividades: [Actividade!]!
  actividade(id: ID!): Actividade!
  entradas: [Entrada!]!
  entrada(id: ID!): Entrada!
  eventos: [Evento!]!
  evento(id: ID!): Evento!
  pagos: [Pago!]!
  pago(id: ID!): Pago!
  registroActividades: [RegistroActividade!]!
  registroActividade(id: ID!): RegistroActividade!
}

type Mutation {
  createUsuario(createUsuarioInput: CreateUsuarioInput!): Usuario!
  updateUsuario(id: ID!, updateUsuarioInput: UpdateUsuarioInput!): Usuario!
  removeUsuario(id: ID!): Usuario!
  createActividade(createActividadeInput: CreateActividadeInput!): Actividade!
  updateActividade(id: ID!, updateActividadeInput: UpdateActividadeInput!): Actividade!
  removeActividade(id: ID!): Actividade!
  createEntrada(createEntradaInput: CreateEntradaInput!): Entrada!
  updateEntrada(id: ID!, updateEntradaInput: UpdateEntradaInput!): Entrada!
  removeEntrada(id: ID!): Entrada!
  createEvento(createEventoInput: CreateEventoInput!): Evento!
  updateEvento(id: ID!, updateEventoInput: UpdateEventoInput!): Evento!
  removeEvento(id: ID!): Evento!
  createPago(createPagoInput: CreatePagoInput!): Pago!
  updatePago(id: ID!, updatePagoInput: UpdatePagoInput!): Pago!
  removePago(id: ID!): Pago!
  createRegistroActividade(createRegistroActividadeInput: CreateRegistroActividadeInput!): RegistroActividade!
  updateRegistroActividade(id: ID!, updateRegistroActividadeInput: UpdateRegistroActividadeInput!): RegistroActividade!
  removeRegistroActividade(id: ID!): RegistroActividade!
}

input CreateUsuarioInput {
  id: ID!
  nombre: String!
  apellido: String!
  correo: String!
  telefono: String!
  tipo: String!
}

input UpdateUsuarioInput {
  id: ID
  nombre: String
  apellido: String
  correo: String
  telefono: String
  tipo: String
}

input CreateActividadeInput {
  id: ID!
  nombre: String!
  descripcion: String!
  fecha: DateTime!
  duracion: Float!
  tipo: String!
}

input UpdateActividadeInput {
  id: ID
  nombre: String
  descripcion: String
  fecha: DateTime
  duracion: Float
  tipo: String
}

input CreateEntradaInput {
  usuarioId: ID!
  tipo_entradaid: ID!
  eventoId: ID!
  pago: Int!
  fecha_adquirida: DateTime!
}

input UpdateEntradaInput {
  usuarioId: ID
  tipo_entradaid: ID
  eventoId: ID
  pago: Int
  fecha_adquirida: DateTime
}

input CreateEventoInput {
  id: ID!
  nombre: String!
  descripcion: String!
  fechainicio: DateTime!
  fechafin: DateTime!
}

input UpdateEventoInput {
  id: ID
  nombre: String
  descripcion: String
  fechainicio: DateTime
  fechafin: DateTime
}

input CreatePagoInput {
  id: ID!
  usuarioId: String!
  metodoPago: String!
  fechaPago: DateTime!
  monto: Int!
  estado: String!
}

input UpdatePagoInput {
  id: ID
  usuarioId: String
  metodoPago: String
  fechaPago: DateTime
  monto: Int
  estado: String
}

input CreateRegistroActividadeInput {
  id: ID!
  usuarioId: String!
  actividadId: String!
}

input UpdateRegistroActividadeInput {
  id: ID!
  usuarioId: String
  actividadId: String
}